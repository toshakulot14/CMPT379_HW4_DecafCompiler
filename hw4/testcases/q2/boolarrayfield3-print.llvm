; ModuleID = 'Test'

@x = global [3 x i1] zeroinitializer

declare void @print_int(i32)

define i32 @main() {
entry:
  store i1 true, i1* getelementptr inbounds ([3 x i1]* @x, i32 0, i32 0)
  store i1 false, i1* getelementptr inbounds ([3 x i1]* @x, i32 0, i32 1)
  store i1 true, i1* getelementptr inbounds ([3 x i1]* @x, i32 0, i32 2)
  %arrayval = load i1* getelementptr inbounds ([3 x i1]* @x, i32 0, i32 0)
  %zexttmp = zext i1 %arrayval to i32
  call void @print_int(i32 %zexttmp)
  %arrayval1 = load i1* getelementptr inbounds ([3 x i1]* @x, i32 0, i32 1)
  %zexttmp2 = zext i1 %arrayval1 to i32
  call void @print_int(i32 %zexttmp2)
  %arrayval3 = load i1* getelementptr inbounds ([3 x i1]* @x, i32 0, i32 2)
  %zexttmp4 = zext i1 %arrayval3 to i32
  call void @print_int(i32 %zexttmp4)
  ret i32 0
}
