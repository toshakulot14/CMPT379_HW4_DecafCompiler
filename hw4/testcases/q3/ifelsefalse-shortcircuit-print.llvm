; ModuleID = 'Test'

@globalstring = private unnamed_addr constant [2 x i8] c"a\00"
@globalstring1 = private unnamed_addr constant [2 x i8] c"b\00"
@globalstring2 = private unnamed_addr constant [2 x i8] c"c\00"
@globalstring3 = private unnamed_addr constant [2 x i8] c"d\00"

declare void @print_string(i8*)

declare void @print_int(i32)

define i32 @main() {
entry:
  %x = alloca i32
  store i32 0, i32* %x
  call void @print_string(i8* getelementptr inbounds ([2 x i8]* @globalstring, i32 0, i32 0))
  br label %ifstart

ifstart:                                          ; preds = %entry
  br i1 false, label %iftrue, label %iffalse

iftrue:                                           ; preds = %ifstart
  call void @print_string(i8* getelementptr inbounds ([2 x i8]* @globalstring1, i32 0, i32 0))
  store i32 1, i32* %x
  br label %end

end:                                              ; preds = %iffalse, %iftrue
  call void @print_string(i8* getelementptr inbounds ([2 x i8]* @globalstring3, i32 0, i32 0))
  %x1 = load i32* %x
  call void @print_int(i32 %x1)
  ret i32 0

iffalse:                                          ; preds = %ifstart
  call void @print_string(i8* getelementptr inbounds ([2 x i8]* @globalstring2, i32 0, i32 0))
  store i32 2, i32* %x
  br label %end
}
