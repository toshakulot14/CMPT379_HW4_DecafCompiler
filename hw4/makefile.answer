
lexlib=l
yacclib=y
bindir=.
test=../testcases/q6/success
rm=/bin/rm -f
mv=/bin/mv -f
targets=
llvmcpp=decaf-llvm

all: $(llvmcpp)

$(targets): %: %.y
	@echo "compiling yacc file:" $<
	@echo "output file:" $@
	bison -o$@.tab.c -d $<
	flex -o$@.lex.c $@.lex
	gcc -o $(bindir)/$@ $@.tab.c $@.lex.c -l$(yacclib) -l$(lexlib)
	$(rm) $@.tab.c $@.tab.h $@.lex.c

$(cpptargets): %: %.y
	@echo "compiling cpp yacc file:" $<
	@echo "output file:" $@
	bison -b $@ -d $<
	$(mv) $@.tab.c $@.tab.cc
	flex -o$@.lex.cc $@.lex
	g++ -o $(bindir)/$@ $@.tab.cc $@.lex.cc -l$(yacclib) -l$(lexlib)
	$(rm) $@.tab.h $@.tab.cc $@.lex.cc

$(llvmcpp): %: %.y
	@echo "compiling cpp yacc file:" $<
	@echo "output file:" $@
	bison -b $@ -d $<
	$(mv) $@.tab.c $@.tab.cc
	flex -o$@.lex.cc $@.lex
	g++ -o $(bindir)/$@ $@.tab.cc $@.lex.cc decaf-stdlib.c `llvm-config --cppflags --ldflags --libs core jit native` -l$(yacclib) -l$(lexlib)
	$(rm) $@.tab.h $@.tab.cc $@.lex.cc

$(llvmtargets): %: %.ll
	@echo "using llvm to compile file:" $<
	llvm-as $<
	llc $@.bc
	gcc $@.s ../decaf-stdlib.c -o $(bindir)/$@

test: $(targets) $(cpptargets)
	@for i in $(test)/*.decaf; do (echo $$i; b=`basename $$i .decaf`; $(bindir)/decaf-llvm < $$i 2> $(test)/$$b.ll); done

clean:
	$(rm) $(targets) $(cpptargets) $(llvmtargets) $(llvmcpp)
	$(rm) *.tab.h *.tab.c *.lex.c
	$(rm) *.bc *.s *.o
	$(rm) -r *.dSYM

